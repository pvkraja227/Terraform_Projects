Variable Precedency

variable "myip" {
  default     = "35.77.142.120/32"
}

1. CLI

terraform plan -var="myip=90.20.5.2/32" 
terraform plan (it takes 90 series)

2. terraform.tfvars

vi terraform.tfvars
myip = "70.3.4.0/32"
esc:wq!
terraform plan (it takes 70 series)

3. Environment Variable

export TF_VAR_myip=60.20.4.5/32
echo $TF_VAR_myip
terraform plan (it takes 60 series)

4. Default (35 series)

#### Parsing Variable ####

provider "aws" {
   region     = "eu-central-1"
   access_key = "AKIA"
   secret_key = "S1Y"
}
Terraform init

1. Variable = String

vi main.tf

resource "aws_instance" "ec2_example" {
   ami           = "ami-0767046d1677be5a0"
   instance_type = var.instance_type
   tags = {
           Name = "Terraform EC2"
   }
}
variable "instance_type" {
   description = "Instance type t3.medium"
   type        = string
   default     = "t2.micro"
} 

vi terraform.tfvars

instance_type = t3.medium

terraform apply --auto-approve
terraform destroy --auto-approve

2. Variable = count

vi main.tf

resource "aws_instance" "ec2_example" {

   ami           = "ami-0767046d1677be5a0"
   instance_type =  "t2.micro"
   count = var.instance_count
   tags = {
           Name = "Terraform EC2"
   }
}
variable "instance_count" {
  description = "EC2 instance count"
  type        = number
  default     = 2
}

vi terraform.tfvars

instance_count = 3

terraform apply --auto-approve
terraform destroy --auto-approve

3. Variable = boolean

vi main.tf

resource "aws_instance" "ec2_example" {

   ami           = "ami-0767046d1677be5a0"
   instance_type =  "t2.micro"
   count = 1
   associate_public_ip_address = var.enable_public_ip

   tags = {
           Name = "Terraform EC2"
   }
}

variable "enable_public_ip" {
  description = "Enable public IP address"
  type        = bool
  default     = true
}

vi terraform.tfvars

enable_public_ip = true

terraform apply --auto-approve
terraform destroy --auto-approve

4. Variable = list of string

vi main.tf

resource "aws_instance" "ec2_example" {

   ami           = "ami-0767046d1677be5a0"
   instance_type =  "t2.micro"
   count = 1

   tags = {
           Name = "Terraform EC2"
   }
}
resource "aws_iam_user" "example" {
  count = length(var.user_names)
  name  = var.user_names[count.index]
}
variable "user_names" {
  description = "IAM usernames"
  type        = list(string)
  default     = ["user1", "user2", "user3"]
}

vi terraform.tfvars

user_names = ["pvk", "raja", "krishna"]

terraform apply --auto-approve
terraform destroy --auto-approve

5. Variable = map of string

vi main.tf

resource "aws_instance" "ec2_example" {

   ami           = "ami-0767046d1677be5a0"
   instance_type =  "t2.micro"

   tags = var.project_environment
}
variable "project_environment" {
  description = "project name and environment"
  type        = map(string)
  default     = {
    project     = "project-alpha",
    environment = "dev"
  }
}

vi terraform.tfvars

project_environment = {
    project     = "project-beta",
    environment = "dev"
}
terraform apply --auto-approve
terraform destroy --auto-approve
